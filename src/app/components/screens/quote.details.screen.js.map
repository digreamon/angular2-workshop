{"version":3,"sources":["app/components/screens/quote.details.screen.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,0CAA+C;AAC/C,sCAAgD;AAChD,qEAAwE;AAexE,IAAqB,kBAAkB;IAKnC,4BAAoB,KAAqB,EACrB,YAA0B;QAD1B,UAAK,GAAL,KAAK,CAAgB;QACrB,iBAAY,GAAZ,YAAY,CAAc;QAHtC,UAAK,GAAU,IAAI,qBAAK,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAI/C,CAAC;IAED,qCAAQ,GAAR;QAAA,iBASC;QARG,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,UAAA,MAAM;YACzC,IAAI,MAAM,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC;YAC9B,KAAI,CAAC,YAAY,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,SAAS,CAC1C,UAAC,KAAU;gBACP,KAAI,CAAC,KAAK,GAAG,KAAK,CAAC;YACvB,CAAC,EACD,UAAC,KAAU,IAAK,OAAA,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,EAApB,CAAoB,CAAC,CAAC;QAC9C,CAAC,CAAC,CAAC;IACP,CAAC;IAEL,yBAAC;AAAD,CApBA,AAoBC,IAAA;AApBoB,kBAAkB;IAZtC,gBAAS,CAAC;QACP,QAAQ,EAAE,eAAe;QACzB,QAAQ,EAAE,0UAOT;QACD,SAAS,EAAE,CAAC,0CAA0C,CAAC;KAC1D,CAAC;qCAM6B,uBAAc;QACP,4BAAY;GAN7B,kBAAkB,CAoBtC;kBApBoB,kBAAkB","file":"app/components/screens/quote.details.screen.js","sourcesContent":["import {ActivatedRoute} from \"@angular/router\";\nimport {Component, OnInit} from \"@angular/core\";\nimport {QuoteService, Quote} from \"../../service/finance/quote.service\";\nimport any = jasmine.any;\n\n@Component({\n    selector: \"quote-details\",\n    template: `\n        <h3>{{quote.name}}&nbsp;&nbsp;({{quote.symbol}})</h3>\n        <hr>\n        <h5><em>Open:</em>{{quote.open}}&nbsp;&nbsp;&nbsp;<em>Last:</em>{{quote.last}}</h5>\n        <div [class.trend-up]=\"quote.getChange()>0\" [class.trend-down]=\"quote.getChange()<0\">\n            {{quote | quoteChange}}\n        </div>\n    `,\n    styleUrls: [\"app/components/screens/quotes.screen.css\"]\n})\nexport default class QuoteDetailsScreen implements OnInit {\n\n    private sub: any;\n    private quote: Quote = new Quote(\"\", \"\", 0, 0);\n\n    constructor(private route: ActivatedRoute,\n                private quoteService: QuoteService) {\n    }\n\n    ngOnInit() {\n        this.sub = this.route.params.subscribe(params => {\n            let symbol = params['symbol'];\n            this.quoteService.loadQuotes(symbol).subscribe(\n                (quote: any) => {\n                    this.quote = quote;\n                },\n                (error: any) => console.error(error));\n        });\n    }\n\n}"],"sourceRoot":"/source/"}