{"version":3,"sources":["app/components/screens/quotes.screen.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,sCAA0D;AAC1D,qEAAwE;AACxE,0CAAuC;AAOvC,IAAqB,YAAY;IAQ7B,sBAAoB,MAAc,EACd,YAA0B;QAD1B,WAAM,GAAN,MAAM,CAAQ;QACd,iBAAY,GAAZ,YAAY,CAAc;QAHtC,mBAAc,GAAW,qBAAqB,CAAC;QAKnD,IAAI,IAAI,GAAG,IAAI,CAAC;QAEhB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC;QACnC,IAAI,CAAC,UAAU,EAAE,CAAC;QAElB,kDAAkD;QAClD,IAAI,CAAC,QAAQ,GAAG,WAAW,CAAC;YACxB,IAAI,CAAC,UAAU,EAAE,CAAC;QACtB,CAAC,EAAE,KAAK,CAAC,CAAC;IACd,CAAC;IAED,kCAAW,GAAX,UAAY,MAAc;QACtB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,UAAU,GAAG,MAAM,CAAC,CAAC,CAAC;IAChD,CAAC;IAED,4BAAK,GAAL,UAAM,KAAU;QACZ,EAAE,CAAC,CAAC,KAAK,CAAC,KAAK,KAAK,EAAE,CAAC,CAAC,CAAC;YACrB,IAAI,CAAC,UAAU,EAAE,CAAC;QACtB,CAAC;IACL,CAAC;IAEO,iCAAU,GAAlB;QAAA,iBAMC;QALG,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC,CAAC,SAAS,CAC5F,UAAC,MAAW;YACR,KAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACzB,CAAC,EACD,UAAC,KAAU,IAAK,OAAA,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,EAApB,CAAoB,CAAC,CAAC;IAC9C,CAAC;IAED,kCAAW,GAAX;QACI,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IACjC,CAAC;IACL,mBAAC;AAAD,CA3CA,AA2CC,IAAA;AAzCY;IAAR,YAAK,EAAE;;6CAAwB;AAFf,YAAY;IALhC,gBAAS,CAAC;QACP,QAAQ,EAAE,QAAQ;QAClB,WAAW,EAAE,2CAA2C;QACxD,SAAS,EAAE,CAAC,0CAA0C,CAAC;KAC1D,CAAC;qCAS8B,eAAM;QACA,4BAAY;GAT7B,YAAY,CA2ChC;kBA3CoB,YAAY","file":"quotes.screen.js","sourcesContent":["import {Component, OnDestroy, Input} from \"@angular/core\";\nimport {QuoteService, Quote} from \"../../service/finance/quote.service\";\nimport {Router} from \"@angular/router\";\n\n@Component({\n    selector: \"quotes\",\n    templateUrl: \"app/components/screens/quotes.screen.html\",\n    styleUrls: [\"app/components/screens/quotes.screen.css\"]\n})\nexport default class QuotesScreen implements OnDestroy {\n\n    @Input() public symbols: string;\n    public quotes: Quote[];\n\n    private interval: any;\n    private defaultSymbols: string = \"INTC,WLL,FB,DAX,FIT\";\n\n    constructor(private router: Router,\n                private quoteService: QuoteService) {\n\n        var that = this;\n\n        this.symbols = this.defaultSymbols;\n        this.loadQuotes();\n\n        // WARNING scope does not work here in the TS !!!!\n        this.interval = setInterval(function () {\n            that.loadQuotes();\n        }, 10000);\n    }\n\n    openDetails(symbol: string) {\n        this.router.navigate([\"/quotes/\" + symbol]);\n    }\n\n    onKey(event: any) {\n        if (event.which === 13) {\n            this.loadQuotes();\n        }\n    }\n\n    private loadQuotes() {\n        return this.quoteService.loadQuotes(this.symbols ? this.symbols : this.defaultSymbols).subscribe(\n            (quotes: any) => {\n                this.quotes = quotes;\n            },\n            (error: any) => console.error(error));\n    }\n\n    ngOnDestroy() {\n        clearInterval(this.interval);\n    }\n}"]}