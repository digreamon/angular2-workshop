{"version":3,"sources":["app/components/screens/welcome.screen.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,sCAAyE;AACzE,kDAA8C;AAC9C,kDAA8C;AAC9C,sEAAkE;AAkBlE,IAAqB,aAAa;IAK9B,uBAAoB,aAA4B;QAA5B,kBAAa,GAAb,aAAa,CAAe;QAJvC,WAAM,GAAW,EAAE,CAAC;IAM7B,CAAC;IAED,2BAAG,GAAH;QACI,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;YACd,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACxC,CAAC;IACL,CAAC;IAED,uCAAe,GAAf;QACI,IAAI,CAAC,SAAS,CAAC,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,GAAG,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC;IACvF,CAAC;IACL,oBAAC;AAAD,CAlBA,AAkBC,IAAA;AAjBY;IAAR,YAAK,EAAE;;6CAAqB;AACP;IAArB,gBAAS,CAAC,sBAAS,CAAC;8BAAY,sBAAS;gDAAC;AACrB;IAArB,gBAAS,CAAC,sBAAS,CAAC;8BAAY,sBAAS;gDAAC;AAH1B,aAAa;IAhBjC,gBAAS,CAAC;QACP,QAAQ,EAAE,SAAS;QACnB,gIAAgI;QAChI,sHAAsH;QACtH,QAAQ,EAAE,kiBAUQ;KACrB,CAAC;qCAMqC,8BAAa;GAL/B,aAAa,CAkBjC;kBAlBoB,aAAa","file":"welcome.screen.js","sourcesContent":["import {Component, ViewChild, AfterViewInit, Input} from \"@angular/core\";\nimport {HiGreeter} from \"../greet/hi.greeter\";\nimport {SqGreeter} from \"../greet/sq.greeter\";\nimport {SpeechService} from \"../../service/speech/speech.service\";\n\n@Component({\n    selector: \"welcome\",\n    // can't do <greeter/> because of html5 specs :: https://github.com/angular/angular/blob/master/CHANGELOG.md#breaking-changes-20\n    // <sq-greeter greeting='Custom greeting'></sq-greeter> for custom parameter, only if field is decorated with @Input()\n    template: `<h3>\n                   <hi-greeter>\n                        <sq-greeter></sq-greeter>\n                   </hi-greeter>\n               </h3>\n               <div class=\"input-group\">\n                  <span class=\"input-group-btn\">\n                    <button (click)=\"say()\" type=\"button\" class=\"btn btn-default\">&nbsp;&nbsp;Say&nbsp;&nbsp;</button>\n                  </span>\n                  <input [(ngModel)]=\"speech\" type=\"text\" class=\"form-control\" id=\"usr\" placeholder=\"Say something\">\n               </div>`\n})\nexport default class WelcomeScreen implements AfterViewInit {\n    @Input() speech: string = \"\";\n    @ViewChild(HiGreeter) hiGreeter: HiGreeter;\n    @ViewChild(SqGreeter) sqGreeter: SqGreeter;\n\n    constructor(private speechService: SpeechService) {\n\n    }\n\n    say() {\n        if (this.speech) {\n            this.speechService.say(this.speech);\n        }\n    }\n\n    ngAfterViewInit() {\n        this.hiGreeter.greeting = this.hiGreeter.greeting + \", \" + this.sqGreeter.greeting;\n    }\n}"]}