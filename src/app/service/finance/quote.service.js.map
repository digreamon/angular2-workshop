{"version":3,"sources":["app/service/finance/quote.service.ts"],"names":[],"mappings":"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","file":"app/service/finance/quote.service.js","sourcesContent":["import {Injectable} from \"@angular/core\";\nimport {Http} from \"@angular/http\";\nimport {Observable} from \"rxjs/Observable\";\nimport \"rxjs/Rx\";\nimport \"rxjs/add/operator/map\";\n\nexport class Quote {\n    constructor(public symbol: string,\n                public name: string,\n                public open: number,\n                public last: number) {\n\n    }\n\n    public getChange(): number {\n        return this.last - this.open;\n    }\n}\n\n// Can't use interface as provider token\n// It's not Angular's fault. An interface is a TypeScript design-time artifact. JavaScript doesn't have interfaces.\n// The TypeScript interface disappears from the generated JavaScript.\n// There is no interface type information left for Angular to find at runtime.\n// export interface QuoteService {\nexport abstract class QuoteService {\n    abstract loadQuotes(quotes: string): Observable<Quote[]>;\n}\n\n@Injectable()\nexport class QuoteServiceImpl extends QuoteService {\n\n    constructor(private http: Http) {\n        super();\n    }\n\n    loadQuotes(quotes: string): Observable<Quote[]> {\n        return this.http.get(this.getUrl(quotes))\n        .map(response => {\n            return response.json().query.results.quote;\n        })\n        .map(quotes => {\n            if (quotes.map) {\n                return quotes.map(\n                    (quote: any) => new Quote(quote.Symbol, quote.Name, quote.Open, quote.LastTradePriceOnly));\n            } else {\n                return Observable.of([new Quote(quotes.Symbol, quotes.Name, quotes.Open, quotes.LastTradePriceOnly)]);\n            }\n        });\n    }\n\n    private getUrl(quotes: string) {\n        return \"https://query.yahooapis.com/v1/public/yql?q=select%20*%20from%20yahoo.finance.quotes%20where%20symbol%20in%20(%22\" +\n            quotes +\n            \"%22)&format=json&env=store%3A%2F%2Fdatatables.org%2Falltableswithkeys&callback=\";\n    }\n}\n\n@Injectable()\nexport class QuoteServiceImplMock implements QuoteService {\n\n    loadQuotes(quotes: string): Observable<Quote[]> {\n        return Observable.from([this.quotes]).map(quotes => {\n            return quotes.map(\n                (quote: any) => new Quote(quote.symbol, quote.name, quote.open, quote.last));\n        });\n    }\n\n    private quotes = [\n        {\n            symbol: \"EURO\",\n            name: \"EUR/CHF\",\n            open: 1.0824,\n            last: 1.0812\n        },\n        {\n            symbol: \"DAX\",\n            name: \" DAX (PERFORMANCE INDEX) (DAX)\",\n            open: 10144.34,\n            last: 10328.87\n        }\n    ];\n}"],"sourceRoot":"/source/"}